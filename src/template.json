{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Notification Hub For Aws",
    "Transform": "AWS::Serverless-2016-10-31",
    "Parameters": {
        "slackChannel": {
            "Type": "String",
            "Description": "Default Slack Channel that messages get sent to"
        },
        "slackUsername": {
            "Type": "String",
            "Description": "Default Slack Username that messages get sent as"
        },
        "slackIcon": {
            "Type": "String",
            "Description": "Default Slack Icon that messages get sent as"
        }
    },
    "Globals": {
        "Function": {
            "Timeout": 30,
            "Runtime": "nodejs12.x",
            "Tracing": "Active",
            "Layers": [
                {
                    "Fn::Sub": "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:2"
                },
                {
                    "Ref": "DependencyLayer"
                }
            ]
        }
    },
    "Resources": {
        "DeploymentBucket": {
            "Type": "AWS::S3::Bucket"
        },
        "SendToSlackFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "scripts/",
                "Handler": "sendToSlack.handler",
                "Events": {
                    "SnsEvent": {
                        "Type": "SNS",
                        "Properties": {
                            "Topic": {
                                "Ref": "MessageTopic"
                            }
                        }
                    }
                },
                "Environment": {
                    "Variables": {
                        "SECRET_NAME": {
                            "Ref": "SlackApiKey"
                        },
                        "CHANNEL": {
                            "Ref": "slackChannel"
                        },
                        "USERNAME": {
                            "Ref": "slackUsername"
                        },
                        "ICON": {
                            "Ref": "slackIcon"
                        }
                    }
                },
                "Policies": [
                    {
                        "AWSSecretsManagerGetSecretValuePolicy": {
                            "SecretArn": {
                                "Ref": "SlackApiKey"
                            }
                        }
                    }
                ]
            }
        },
        "SendToSlackFunctionErrorsAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "ActionsEnabled": true,
                "AlarmDescription": "Slack notification lambda errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "DatapointsToAlarm": 1,
                "Dimensions": [
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "SendToSlackFunction"
                        }
                    }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "AlarmActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "OKActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "Period": 300,
                "Statistic": "Sum",
                "Threshold": 0,
                "TreatMissingData": "notBreaching",
                "EvaluationPeriods": "1"
            }
        },
        "CloudWatchAlarmMapFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "scripts/",
                "Handler": "cloudWatchAlarmMap.handler",
                "Events": {
                    "SnsEvent": {
                        "Type": "SNS",
                        "Properties": {
                            "Topic": {
                                "Ref": "CloudWatchAlarmTopic"
                            }
                        }
                    }
                },
                "Environment": {
                    "Variables": {
                        "MESSAGE_TOPIC": {
                            "Ref": "MessageTopic"
                        }
                    }
                },
                "Policies": [
                    {
                        "SNSPublishMessagePolicy": {
                            "TopicName": {
                                "Fn::GetAtt": [
                                    "MessageTopic",
                                    "TopicName"
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "CloudWatchAlarmMapFunctionErrorsAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "ActionsEnabled": true,
                "AlarmDescription": "CloudWatch Alarm Map lambda errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "DatapointsToAlarm": 1,
                "Dimensions": [
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "CloudWatchAlarmMapFunction"
                        }
                    }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "AlarmActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "OKActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "Period": 300,
                "Statistic": "Sum",
                "Threshold": 0,
                "TreatMissingData": "notBreaching",
                "EvaluationPeriods": "1"
            }
        },
        "CodeBuildMapFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "scripts/",
                "Handler": "codeBuildMap.handler",
                "Events": {
                    "SnsEvent": {
                        "Type": "SNS",
                        "Properties": {
                            "Topic": {
                                "Ref": "CodeBuildTopic"
                            }
                        }
                    }
                },
                "Environment": {
                    "Variables": {
                        "MESSAGE_TOPIC": {
                            "Ref": "MessageTopic"
                        }
                    }
                },
                "Policies": [
                    {
                        "SNSPublishMessagePolicy": {
                            "TopicName": {
                                "Fn::GetAtt": [
                                    "MessageTopic",
                                    "TopicName"
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "CodeBuildMapFunctionErrorsAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "ActionsEnabled": true,
                "AlarmDescription": "CodeBuild Map lambda errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "DatapointsToAlarm": 1,
                "Dimensions": [
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "CodeBuildMapFunction"
                        }
                    }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "AlarmActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "OKActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "Period": 300,
                "Statistic": "Sum",
                "Threshold": 0,
                "TreatMissingData": "notBreaching",
                "EvaluationPeriods": "1"
            }
        },
        "ConfigMapFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "scripts/",
                "Handler": "ConfigMap.handler",
                "Events": {
                    "SnsEvent": {
                        "Type": "SNS",
                        "Properties": {
                            "Topic": {
                                "Ref": "ConfigTopic"
                            }
                        }
                    }
                },
                "Environment": {
                    "Variables": {
                        "MESSAGE_TOPIC": {
                            "Ref": "MessageTopic"
                        }
                    }
                },
                "Policies": [
                    {
                        "SNSPublishMessagePolicy": {
                            "TopicName": {
                                "Fn::GetAtt": [
                                    "MessageTopic",
                                    "TopicName"
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "ConfigMapFunctionErrorsAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "ActionsEnabled": true,
                "AlarmDescription": "Config Map lambda errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "DatapointsToAlarm": 1,
                "Dimensions": [
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "ConfigMapFunction"
                        }
                    }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "AlarmActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "OKActions": [
                    {
                        "Ref": "CloudWatchAlarmTopic"
                    }
                ],
                "Period": 300,
                "Statistic": "Sum",
                "Threshold": 0,
                "TreatMissingData": "notBreaching",
                "EvaluationPeriods": "1"
            }
        },
        "DependencyLayer": {
            "Type": "AWS::Serverless::LayerVersion",
            "Properties": {
                "LayerName": "notification-hub-dependencies",
                "Description": "Dependencies for notification hub",
                "ContentUri": "dependencies/",
                "CompatibleRuntimes": [
                    "nodejs12.x"
                ],
                "LicenseInfo": "MIT",
                "RetentionPolicy": "Retain"
            }
        },
        "MessageTopic": {
            "Type": "AWS::SNS::Topic"
        },
        "CloudWatchAlarmTopic": {
            "Type": "AWS::SNS::Topic"
        },
        "CodeBuildTopic": {
            "Type": "AWS::SNS::Topic"
        },
        "ConfigTopic": {
            "Type": "AWS::SNS::Topic"
        },
        "SlackApiKey": {
            "Type": "AWS::SecretsManager::Secret",
            "Properties": {
                "Description": {
                    "Fn::Sub": "${AWS::StackName} - Slack Api Key"
                },
                "SecretString": "NotSet"
            }
        }
    },
    "Outputs": {
        "deploymentBucket": {
            "Description": "Bucket for storing the SAM application code",
            "Value": {
                "Fn::GetAtt": [
                    "DeploymentBucket",
                    "DomainName"
                ]
            }
        },
        "messageTopic": {
            "Description": "SNS topic arm for Messages",
            "Value": {
                "Ref": "MessageTopic"
            }
        },
        "cloudWatchAlarmTopic": {
            "Description": "SNS topic arm for CloudWatch Alarms",
            "Value": {
                "Ref": "CloudWatchAlarmTopic"
            }
        },
        "codeBuildTopic": {
            "Description": "SNS topic arm for CodeBuild events",
            "Value": {
                "Ref": "CodeBuildTopic"
            }
        },
        "configTopic": {
            "Description": "SNS topic arm for ConfigTopic events",
            "Value": {
                "Ref": "ConfigTopic"
            }
        }
    }
}